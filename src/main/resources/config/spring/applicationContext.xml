<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- 启用注解 -->
    <context:annotation-config />

    <!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
    <context:component-scan base-package="com.huawei.it.hwdata">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 统一加载配置 -->
    <bean id="propertyConfigurer"   class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="utf-8" />
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <array>
                <value>classpath*:config/mapper/mysql/*.xml</value>
            </array>
        </property>
        <property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml"></property>
    </bean>


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close"  init-method="init">

        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.idle.connection.test.period}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${jdbc.idle.max.age}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${jdbc.minPoolSize}"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${jdbc.maxPoolSize}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${jdbc.initialPoolSize}"/>
        <!--
        <property name="connectProperties" ref="dataSourceEncryptProperties"/>
         -->
        <!--开启sql监听-->
        <property name="filters" value="stat" />
    </bean>




    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.huawei.it.hwdata.dao" />
        <!-- <property name="markerExtService" value="com.shell.seed.base.dao.BaseDao"/> -->
    </bean>


    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
          scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>


    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- enable transaction annotation support-->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>





    <bean id="userService" class="com.huawei.it.hwdata.service.impl.UserServiceImpl"></bean>

</beans>